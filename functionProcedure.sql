

/*
                          Procedural Approach
1. Language Support: Supports procedural languages like PL/pgSQL, PL/Python, etc.
2. Complex logic: Allows for complex logic using control structures like loops, conditionals, and exception handling.
3. Stored Procedures/Functions: Provides the ablility to create stored procddures or fuctions.

                          Non-Procedural Approach
1. Declarative Queeries: Focuses on writing declarative SQL queries to retrieve, update, or delete data from the database.
2. Simplicity: Emphasize simplictity by expressing orerations, in terms of what data is needed.
3. SQL Functions: Supports SQL function, which are single SQL staements that return a value or set of values.
4. Performance: Can sometimes offer better performance for simple orerations due to the optimizied query execution plans generated by the database engine.

 */

SELECT * FROM employees;


--  Create function
CREATE Function emp_count()
RETURNS INT
LANGUAGE SQL
AS
$$
SELECT count(*) FROM employees;
$$;

-- Delete data by function
CREATE or REPLACE Function delete_emp()
RETURNS void
LANGUAGE SQL
AS
$$
DELETE  FROM employees WHERE employee_id = 42;
$$;
-- Delete data with id by   function
CREATE or REPLACE Function delete_emp_by_id(p_emp_id int)
RETURNS void
LANGUAGE SQL
AS
$$
DELETE  FROM employees WHERE employee_id = p_emp_id;
$$;

-- Procedure
-- CREATE PROCEDURE remove_emp()
-- LANGUAGE plpgsql
-- AS
-- $$ 
--     BEGIN
-- DELETE  FROM employees WHERE employee_id = 18;
-- END
-- $$;

CREATE PROCEDURE remove_emp_var1()
LANGUAGE plpgsql
AS
$$  
    DECLARE
    test_var int;
    BEGIN
    SELECT employee_id INTO test_var FROM employees WHERE employee_id = 45;
DELETE  FROM employees WHERE employee_id = test_var;
END
$$;

CREATE PROCEDURE remove_emp_by_id(p_emp_id int)
LANGUAGE plpgsql
AS
$$  
    DECLARE
    test_var int;
    BEGIN
    SELECT employee_id INTO test_var FROM employees WHERE employee_id = p_emp_id;
DELETE  FROM employees WHERE employee_id = test_var;
RAISE notice 'Employee removed successfully';
END
$$;

SELECT emp_count();
SELECT delete_emp();
SELECT delete_emp_by_id(19);
-- CALL remove_emp();
CALL remove_emp_var1();
CALL remove_emp_by_id(42);